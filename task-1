import re

def passwordS(password):
    strength = 0
    feedback = []

    # Length check
    le= len(password)
    if le < 8:
        feedback.append("Password is too short. Minimum length is 8 characters.")
    elif le > 12 :
        strength += 2
        feedback.append("Password length is good.")
    else:
        strength += 1
        feedback.append("Password length is obtain.")

    # Complexity checks
    if re.search(r"[a-z]", password):
        strength += 1
    else:
        feedback.append("Password should include at least one lowercase letter.")

    if re.search(r"[A-Z]", password):
        strength += 1
    else:
        feedback.append("Password should include at least one uppercase letter.")

    if re.search(r"[0-9]", password):
        strength += 1
    else:
        feedback.append("Password should include at least one digit.")

    if re.search(r"[@$!%*?&]", password):
        strength += 1
    else:
        feedback.append("Password should include at least one special character (@$!%*?&).")
    
    if strength <=2 :
        feedback.append("Password is simple")
    elif strength ==3:
        feedback.append("Password is moderate")
    else:
        feedback.append("Password is complex")
    # Uniqueness check
    if len(set(password)) / le > 0.7:
        strength += 1
        feedback.append("Password has a  uniqueness.")
    else:
        feedback.append("Password could be more unique.")

    # Strength rating
    if strength <= 2:
        feedback.append("Overall password strength: Weak")
    elif strength == 3 or strength == 4:
        feedback.append("Overall password strength: Medium")
    else:
        feedback.append("Overall password strength: Strong")

    return strength, feedback

# Example usage
password = input("Enter a password to check its strength: ")
strength, feedback = passwordS(password)

print("\nPassword Strength Feedback:")
for comment in feedback:
    print(f"- {comment}")
